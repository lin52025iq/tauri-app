name: "publish"

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          # - platform: 'macos-latest'
          #   args: '--target x86_64-apple-darwin'
          # - platform: "ubuntu-24.04"
          #   args: ""
          # - platform: "windows-latest"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install pnpm + deps
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10
          run_install: true

      - name: Use Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 22
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: tauri-apps/tauri-action@action-v0.5.20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: "v__VERSION__"
          releaseBody: "Note: macOS builds are not signed so in order to run the app, after moving the app to Applications folder you need to run `xattr -c /Applications/tauri-app.app` in the terminal. (See tauri-apps/tauri-action#919)."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload latest.json as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: updater-artifact
          path: src-tauri/target/release/bundle/updater/latest.json
          if-no-files-found: error

  push-updater:
    name: Push updater file to updater branch
    needs: publish-tauri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: updater-artifact
          path: src-tauri/updater/

      - name: Setup Git config
        run: |
          git config user.name "lin52025iq"
          git config user.email "lin52025iq@github.com"

      - name: Fetch updater branch
        run: |
          git fetch origin updater || true
          git checkout -B updater origin/updater || git checkout -b updater

      - name: Commit and push updater file
        run: |
          git add src-tauri/updater/latest.json
          git commit -m "chore: update latest.json for ${{ github.ref_name }}" || echo "No changes to commit"
          git push origin HEAD:updater
